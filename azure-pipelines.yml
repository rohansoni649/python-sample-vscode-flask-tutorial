# Python package
- task: DockerCompose@0
  inputs:
    containerregistrytype: 'Azure Container Registry'
    azureContainerRegistry: '{"loginServer":"mycontregistry2404.azurecr.io", "id" : "/subscriptions/ee22c8f0-93df-4b47-925a-d337fef522fe/resourceGroups/Rohan_RG/providers/Microsoft.ContainerRegistry/registries/myContRegistry2404"}'
    dockerComposeFile: '**/docker-compose.yml'
    action: 'Run a Docker Compose command'
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

pool:
  vmImage: ubuntu-latest
strategy:
  matrix:
    Python27:
      python.version: '2.7'
    Python35:
      python.version: '3.5'
    Python36:
      python.version: '3.6'
    Python37:
      python.version: '3.7'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
  displayName: 'Install dependencies'

- script: |
    pip install pytest pytest-azurepipelines
    pytest
  displayName: 'pytest'
